// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://typxpvlspnjbpxoqtswe.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR5cHhwdmxzcG5qYnB4b3F0c3dlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY1ODAyMTcsImV4cCI6MjA2MjE1NjIxN30.oSKSpiqQ5lNAq29scOfG8pPYyOhCDqo7oQsKqFCUtOY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    storageKey: 'g15-finance-genius-auth-storage',
    flowType: 'pkce',
    storage: {
      getItem: (key) => {
        try {
          const storedSession = localStorage.getItem(key);
          return storedSession;
        } catch (error) {
          console.error('Supabase getItem error:', error);
          return null;
        }
      },
      setItem: (key, value) => {
        try {
          localStorage.setItem(key, value);
          return;
        } catch (error) {
          console.error('Supabase setItem error:', error);
        }
      },
      removeItem: (key) => {
        try {
          localStorage.removeItem(key);
          return;
        } catch (error) {
          console.error('Supabase removeItem error:', error);
        }
      }
    }
  },
  global: {
    fetch: async (url, options = {}) => {
      const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => reject(new Error('Supabase request timeout')), 30000);
      });
      
      try {
        const res = await Promise.race([
          fetch(url, options),
          timeoutPromise
        ]);
        return res as Response;
      } catch (error) {
        console.error('Supabase fetch error:', error);
        throw error;
      }
    }
  }
});